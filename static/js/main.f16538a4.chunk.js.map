{"version":3,"sources":["components/Container.js","components/Header.js","actions/cartActions.js","constants/actionTypes.js","components/Product.js","components/ProductsList.js","components/CartProduct.js","components/CartProductsList.js","components/Cart.js","App.js","serviceWorker.js","store.js","reducers/cartReducer.js","index.js"],"names":["Container","children","className","Header","dispatch","useDispatch","cartAmount","useSelector","state","cart","cartItems","reduce","acc","item","amount","aria-label","onClick","type","payload","Product","product","title","cover","availability","price","currency","src","alt","toFixed","ProductsList","items","map","key","id","CartProduct","removeFromCart","CartProductsList","products","Cart","isCartOpen","cartTotalPrice","length","App","Boolean","window","location","hostname","match","reducer","combineReducers","action","existingItem","find","el","filter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f16538a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/container.scss';\r\n\r\nfunction Container({ children }) {\r\n  return <div className='container'>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { MdShoppingCart } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openCart } from '../actions/cartActions';\r\nimport '../styles/header.scss';\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const cartAmount = cart.cartItems.reduce((acc, item) => acc + item.amount, 0);\r\n\r\n  const handleOpenCart = () => {\r\n    dispatch(openCart());\r\n  };\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__wrap'>\r\n        <h1>Game Shop</h1>\r\n        <div className='header__icon-wrap'>\r\n          <span className='header__cart-title'>cart</span>\r\n          <button aria-label='open cart' onClick={handleOpenCart}>\r\n            <MdShoppingCart className='header__cart-icon' />\r\n            <span className='header__cart-items-count'>{cartAmount}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  OPEN_CART,\r\n  CLOSE_CART,\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n} from '../constants/actionTypes';\r\n\r\nexport const openCart = () => (dispatch) => {\r\n  dispatch({\r\n    type: OPEN_CART,\r\n    payload: true,\r\n  });\r\n};\r\n\r\nexport const closeCart = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLOSE_CART,\r\n    payload: false,\r\n  });\r\n};\r\n\r\nexport const addToCart = (item) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: item,\r\n  });\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: id,\r\n  });\r\n};\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const OPEN_CART = 'OPEN_CART';\r\nexport const CLOSE_CART = 'CLOSE_CART';\r\n","import React from 'react';\r\nimport { MdShoppingCart } from 'react-icons/md';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../actions/cartActions';\r\nimport '../styles/product.scss';\r\n\r\nfunction Product({ product = {} }) {\r\n  const { title, cover, availability, price, currency } = product;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddToCart = () => {\r\n    dispatch(addToCart(product));\r\n  };\r\n\r\n  return (\r\n    <li className='product'>\r\n      <img src={cover} alt={title} />\r\n      {!availability ? (\r\n        <div className='product__sold-out-box'>\r\n          <p className='product__sold-out-text'>Out of stock</p>\r\n        </div>\r\n      ) : (\r\n        <div className='product__info'>\r\n          <p className='product__name'>{title}</p>\r\n          <p className='product__price'>\r\n            {price.toFixed(2)}&nbsp;{currency}\r\n          </p>\r\n          <button className='product__button' onClick={handleAddToCart}>\r\n            Add to cart&nbsp;\r\n            <MdShoppingCart className='icon' />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport Product from './Product';\r\nimport items from '../items.json';\r\nimport '../styles/products-list.scss';\r\n\r\nfunction ProductsList() {\r\n  return (\r\n    <ul className='products-list'>\r\n      {items.map((item) => (\r\n        <Product key={item.id} product={item} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ProductsList;\r\n","import React from 'react';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { removeFromCart } from '../actions/cartActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport '../styles/cart-product.scss';\r\n\r\nfunction CartProduct({ product }) {\r\n  const { id, title, cover, price, currency, amount } = product;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRemoveFromCart = () => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  return (\r\n    <li className='cart-product'>\r\n      <div>\r\n        <img className='cart-product__img' src={cover} alt={title} />\r\n      </div>\r\n      <div className='cart-product__info'>\r\n        <p className='cart-product__name'>{title}</p>\r\n        <p className='cart-product__amount'>amount:&nbsp;{amount}</p>\r\n        <p className='cart-product__price'>\r\n          {(amount * price).toFixed(2)}&nbsp;{currency}\r\n        </p>\r\n      </div>\r\n      <div className='cart-product__remove-box'>\r\n        <button\r\n          className='cart-product__remove-btn'\r\n          aria-label='remove item from cart'\r\n          onClick={handleRemoveFromCart}\r\n        >\r\n          <MdDelete className='icon' />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CartProduct;\r\n","import React from 'react';\r\nimport CartProduct from './CartProduct';\r\nimport '../styles/cart-products-list.scss';\r\n\r\nfunction CartProductsList({ products = [] }) {\r\n  return (\r\n    <ul className='cart-products'>\r\n      {products.map((product) => (\r\n        <CartProduct key={product.id} product={product} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default CartProductsList;\r\n","import React from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeCart } from '../actions/cartActions';\r\nimport CartProductsList from './CartProductsList';\r\nimport '../styles/cart.scss';\r\n\r\nfunction Cart() {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { isCartOpen, cartItems } = cart;\r\n\r\n  const cartAmount = cart.cartItems.reduce((acc, item) => acc + item.amount, 0);\r\n\r\n  const cartTotalPrice = cart.cartItems.reduce(\r\n    (acc, item) => acc + item.amount * item.price,\r\n    0\r\n  );\r\n\r\n  const handleCloseCart = () => {\r\n    dispatch(closeCart());\r\n  };\r\n\r\n  return (\r\n    <aside className={`cart ${isCartOpen ? 'cart--open' : ''}`}>\r\n      <header className='cart__header'>\r\n        <h3>\r\n          cart&nbsp;<span>({cartAmount})</span>\r\n        </h3>\r\n        <button\r\n          className='cart__close-button'\r\n          aria-label='close cart'\r\n          onClick={handleCloseCart}\r\n        >\r\n          <MdClose className='icon' />\r\n        </button>\r\n      </header>\r\n      {cartItems.length === 0 ? (\r\n        <div>\r\n          <p className='cart__empty-cart'>Cart is empty</p>\r\n        </div>\r\n      ) : (\r\n        <CartProductsList products={cartItems} />\r\n      )}\r\n      <div className='cart__total'>\r\n        <span>total:&nbsp;{cartTotalPrice.toFixed(2)}&nbsp;PLN</span>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport Container from './components/Container';\r\nimport Header from './components/Header';\r\nimport ProductsList from './components/ProductsList';\r\nimport Cart from './components/Cart';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <Container>\r\n          <ProductsList />\r\n        </Container>\r\n        <Cart />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { cartReducer } from './reducers/cartReducer';\r\n\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n});\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: [],\r\n    isCartOpen: false,\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  OPEN_CART,\r\n  CLOSE_CART,\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n} from '../constants/actionTypes';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], isCartOpen: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case OPEN_CART:\r\n      return {\r\n        ...state,\r\n        isCartOpen: action.payload,\r\n      };\r\n    case CLOSE_CART:\r\n      return {\r\n        ...state,\r\n        isCartOpen: action.payload,\r\n      };\r\n    case ADD_TO_CART:\r\n      const item = action.payload;\r\n\r\n      const existingItem = state.cartItems.find((el) => el.id === item.id);\r\n\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((el) =>\r\n            el.id === existingItem.id ? { ...el, amount: el.amount + 1 } : el\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, { ...item, amount: 1 }],\r\n        };\r\n      }\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((el) => el.id !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}